import * as React from 'react';
import { useState } from 'react';

const DragAndDropList = ({ items, onReorder }) => {
    const [draggingItemId, setDraggingItemId] = useState(null);
    const handleDragStart = (event, id) => {
        event.dataTransfer.setData('text/plain', id);
        setDraggingItemId(id);
    };
    const handleDragOver = (event) => {
        event.preventDefault();
    };
    const handleDrop = (event, targetId) => {
        const sourceId = event.dataTransfer.getData('text/plain');
        const updatedItems = items.slice();
        const sourceIndex = updatedItems.findIndex((item) => item.id === sourceId);
        const targetIndex = updatedItems.findIndex((item) => item.id === targetId);
        const [removedItem] = updatedItems.splice(sourceIndex, 1);
        updatedItems.splice(targetIndex, 0, removedItem);
        onReorder(updatedItems);
        setDraggingItemId(null);
    };
    return (React.createElement("ul", { className: "drag-and-drop-list", style: { listStyleType: 'none', margin: 0, padding: 0 } }, items.map((item) => (React.createElement("li", { key: item.id, draggable: true, onDragStart: (event) => handleDragStart(event, item.id), onDragOver: handleDragOver, onDrop: (event) => handleDrop(event, item.id), className: item.id === draggingItemId ? 'dragging' : '', style: {
            backgroundColor: '#ffffff',
            boxShadow: '0px 2px 4px rgba(0, 0, 0, 0.1)',
            borderRadius: '6px',
            marginBottom: '8px',
            padding: '12px',
            cursor: 'grab',
            transition: 'background-color 0.3s ease',
            animation: item.id === draggingItemId ? 'moveItem 0.3s ease infinite alternate' : 'none',
        }, onFocus: (event) => event.target.style.backgroundColor = '#f0f0f0', onBlur: (event) => event.target.style.backgroundColor = '#ffffff' }, item.content)))));
};

const useCounter = () => {
    const [count, setCount] = useState(0);
    const increment = () => {
        setCount(count + 1);
    };
    const decrement = () => {
        console.log("decerement");
        setCount(count - 1);
    };
    return { count, increment, decrement };
};

export { DragAndDropList, useCounter };
