
import * as React from 'react'
import { useState } from 'react';
interface Item {
  id: string;
  content: string;
}

interface DragAndDropListProps {
  items: Item[];
  onReorder: (items: Item[]) => void;
}

const DragAndDropList: React.FC<DragAndDropListProps> = ({ items, onReorder }) => {
  const [draggingItemId, setDraggingItemId] = useState<string | null>(null);

  const handleDragStart = (event: React.DragEvent<HTMLLIElement>, id: string) => {
    event.dataTransfer.setData('text/plain', id);
    setDraggingItemId(id);
  };

  const handleDragOver = (event: React.DragEvent<HTMLLIElement>) => {
    event.preventDefault();
  };

  const handleDrop = (event: React.DragEvent<HTMLLIElement>, targetId: string) => {
    const sourceId = event.dataTransfer.getData('text/plain');
    const updatedItems = items.slice();
    const sourceIndex = updatedItems.findIndex((item) => item.id === sourceId);
    const targetIndex = updatedItems.findIndex((item) => item.id === targetId);

    const [removedItem] = updatedItems.splice(sourceIndex, 1);
    updatedItems.splice(targetIndex, 0, removedItem);

    onReorder(updatedItems);
    setDraggingItemId(null);
  };

  return (
    <ul className="drag-and-drop-list" style={{ listStyleType: 'none', margin: 0, padding: 0 }}>
      {items.map((item) => (
        <li
          key={item.id}
          draggable
          onDragStart={(event) => handleDragStart(event, item.id)}
          onDragOver={handleDragOver}
          onDrop={(event) => handleDrop(event, item.id)}
          className={item.id === draggingItemId ? 'dragging' : ''}
          style={{
            backgroundColor: '#ffffff',
            boxShadow: '0px 2px 4px rgba(0, 0, 0, 0.1)',
            borderRadius: '6px',
            marginBottom: '8px',
            padding: '12px',
            cursor: 'grab',
            transition: 'background-color 0.3s ease',
            animation: item.id === draggingItemId ? 'moveItem 0.3s ease infinite alternate' : 'none',
          }}
          onFocus={(event) => event.target.style.backgroundColor = '#f0f0f0'}
          onBlur={(event) => event.target.style.backgroundColor = '#ffffff'}
        >
          {item.content}
        </li>
      ))}
    </ul>
  );
};

export { DragAndDropList };
